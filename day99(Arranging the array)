//{ Driver Code Starts
//Initial Template for Java

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main(String[] args) throws IOException
	{
	        BufferedReader br =
            new BufferedReader(new InputStreamReader(System.in));
        int t =
            Integer.parseInt(br.readLine().trim()); // Inputting the testcases
        while(t-->0)
        {
            int n = Integer.parseInt(br.readLine().trim());
            int a[] = new int[n];
            String inputLine[] = br.readLine().trim().split(" ");
            for (int i = 0; i < n; i++) {
                a[i] = Integer.parseInt(inputLine[i]);
            }
            
            Solution obj = new Solution();
            obj.Rearrange(a, n);
            
            StringBuilder output = new StringBuilder();
            for(int i=0;i<n;i++)
                output.append(a[i]+" ");
            System.out.println(output);
            
        }
	}
}


// } Driver Code Ends


class Solution {

  class Pair {
    int val;
    int ind;
    Pair(int val, int ind) {
      this.val = val;
      this.ind = ind;
    }
  }
  public void Rearrange(int a[], int n) {
    PriorityQueue < Pair > pq = new PriorityQueue < > ((a1, b) -> a1.val - b.val),
      pq1 = new PriorityQueue < > ((a1, b) -> a1.ind - b.ind);
    for (int i = 0; i < n; i++) {
      pq.add(new Pair(a[i], i));
    }
    int i = 0;
    while (!pq.isEmpty() && pq.peek().val < 0) {
      pq1.add(pq.poll());
    }
    while (!pq1.isEmpty()) {
      a[i] = pq1.poll().val;
      i++;
    }
    while (!pq.isEmpty() && pq.peek().val >= 0) {
      pq1.add(pq.poll());
    }
    while (!pq1.isEmpty()) {
      a[i] = pq1.poll().val;
      i++;
    }
  }
}
