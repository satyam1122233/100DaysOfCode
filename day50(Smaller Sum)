//{ Driver Code Starts
//Initial Template for Java
import java.util.*;
import java.io.*;

public class GFG
{
    public static void main(String args[])throws IOException
    {
        BufferedReader in=new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out=new PrintWriter(System.out);
        int t=Integer.parseInt(in.readLine());
        while(t-->0){
            int n=Integer.parseInt(in.readLine());
            String s[]=in.readLine().trim().split(" ");
            int a[]=new int[n];
            for(int i=0;i<n;i++){
                a[i]=Integer.parseInt(s[i]);
            }
            Solution ob=new Solution();
            long ans[]=ob.smallerSum(n,a);
            for(long i:ans){
                out.print(i+" ");
            }out.println();
        }
        out.close();
    }
}
// } Driver Code Ends


//User function Template for Java
class Solution
{
    
    public int BinarySearch(int key,long []temp,int n){
        int first=0,mid=0,last=n-1, index=-1;
        
        while(first<=last){
            
            mid=(first+last)/2;
            if(key==temp[mid]){
                index = mid;
                last=mid-1;
            }
            else if(key<temp[mid]){
                last = mid-1;
                
            }
            else{
                first = mid+1;
            }
            
        }
        
        return index;
    }
    
    
    
    
    
    public long[] smallerSum(int n,int arr[])
    {
      
      long [] ans = new long[n];  
      long [] sum = new long[n];  
      long [] temp = new long[n]; 
      
      for(int i=0;i<n;i++){
          temp[i]=arr[i];
      }
      Arrays.sort(temp);
      sum[0]=temp[0];
      for(int i=1;i<n;i++){
          
          sum[i]=sum[i-1]+temp[i];
      }
      
      for(int i=0;i<n;i++){
          int index = BinarySearch(arr[i],temp,n);
              ans[i]=sum[index]-arr[i];
          }
          
      
      return ans;
        
    }
    
}
